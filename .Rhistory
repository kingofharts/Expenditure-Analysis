load("~/Documents/GitHub/Expenditure-Analysis/.RData")
summary(aovCountDoW)
?summary
summary(aovCountDoW)[1]
summary(aovCountDoW)[2]
describe(summary(aovCountDoW))
dim(summary(aovCountDoW))
summary(aovCountDoW)[1,5]
summary(aovCountDoW)[5]
summary(aovCountDoW)[,5]
summary(aovCountDoW)
aovCountDoW
# Load Libraries
library(caret)
library(ellipse)
library(e1071)
library(randomForest)
library(plyr)
library(sp)
library(ggplot2)
# Load Data
RawImport <- read.delim("DataExp2.txt", header = TRUE)
# Clean Data
CleanImport <- RawImport
CleanImport[,1] <- as.factor(CleanImport[,1])
CleanImport[,2] <- as.factor(CleanImport[,2])
CleanImport[,5] <- CleanImport[,5]*-1
colnames(CleanImport)[1] <- "Date"
colnames(CleanImport)[2] <- "DoW"
colnames(CleanImport)[5] <- "Exp"
drops <- c("Date")
CleanImport <- CleanImport[ , !(names(CleanImport) %in% drops)]
remove(RawImport,drops)
head(CleanImport)
x <- as.matrix(CleanImport[,c(3:4)])
y <- factor(CleanImport$DoW)
featurePlot(x, y, plot = "density", scales = list(x=list(relation = "free"), y = list(relation = "free")))
x <- as.matrix(CleanImport[,c(2:3)])
y <- factor(CleanImport$DoW)
featurePlot(x, y, plot = "density", scales = list(x=list(relation = "free"), y = list(relation = "free")))
y <- as.matrix(CleanImport[,c(2:3)])
x <- factor(CleanImport$DoW)
featurePlot(x, y, plot = "density", scales = list(x=list(relation = "free"), y = list(relation = "free")))
head(CleanImport)
remove(y,x,CleanImport)
RawImport <- read.delim("DataExp2.txt", header = TRUE)
setwd("~/Documents/GitHub/Expenditure-Analysis")
setwd("~/Documents/GitHub/Expenditure-Analysis")
RawImport <- read.delim("DataExp2.txt", header = TRUE)
CleanImport <- RawImport
CleanImport[,1] <- as.factor(CleanImport[,1])
CleanImport[,2] <- as.factor(CleanImport[,2])
CleanImport[,5] <- CleanImport[,5]*-1
colnames(CleanImport)[1] <- "Date"
colnames(CleanImport)[2] <- "DoW"
colnames(CleanImport)[5] <- "Exp"
drops <- c("Date")
CleanImport <- CleanImport[ , !(names(CleanImport) %in% drops)]
remove(RawImport,drops)
head(CleanImport)
x <- as.matrix(CleanImport[,c(3:4)])
y <- factor(CleanImport$DoW)
featurePlot(x, y, plot = "density", scales = list(x=list(relation = "free"), y = list(relation = "free")))
plot(CleanImport$DoW, CleanImport$Exp)
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_point() +
labs(y = "Percentage correct", x = "Categorical variable");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_point() +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), mean(Exp)) +
geom_point() +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), mean(Exp)) +
geom_point() +
labs(y = "NetExp", x = "DoW")
;
ggplot(CleanImport, aes(as.factor(DoW), mean(Exp)) +
labs(y = "NetExp", x = "DoW")
;
ggplot(CleanImport, aes(as.factor(DoW), Exp) +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_point() +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_box() +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_boxplot() +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_boxplot() +
labs(y = "NetExp", x = "DoW");
ggplot(CleanImport, aes(as.factor(DoW), Exp)) +
geom_boxplot() +
stat_summary(fun.y = mean, colour = "darkred", geom = "point") +
labs(y = "NetExp", x = "DoW");
