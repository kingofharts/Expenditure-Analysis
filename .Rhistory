Demo <- read.delim("DataExp1.txt")
setwd("~/Documents/GitHub/Expenditure-Analysis")
Demo <- read.delim("DataExp1.txt")
Demo <- read.delim("DataExp1.txt")
?aggregate
names(Demo)
Demo$Net <- Demo$Debit + Demo$Credit
head(Demo)
Demo[is.na(Demo)] <- 0
Demo$Net <- Demo$Debit + Demo$Credit
head(Demo)
AggDemo <- aggregate(x = Demo, by = Demo$Date, FUN = "sum")
Demo[,1] <- as.factor(Demo[,1])
Demo[,2] <- as.factor(Demo[,2])
AggDemo <- aggregate(x = Demo, by = Demo$Date, FUN = "sum")
classes(Demo)
class(Demo)
summary(Demo)
classes <- c()
for (i in 1:5) {classes[i] <- as.vector(class(Demo[,i]))}
classes
AggDemo <- aggregate(x = Demo, by = Demo$Date, FUN = "sum")
AggDemo <- aggregate(x = Demo, by = Date, FUN = "sum")
AggDemo <- aggregate(x = Demo, by = Demo[,1], FUN = "sum")
AggDemo <- aggregate(x = Demo, by = as.list(Demo[,1]), FUN = "sum")
AggDemo <- aggregate(x = Demo$Net, by = Demo$Date, FUN = "sum")
DatesList <- as.list(Demo$Date)
remove(DatesList)
Test <- aggregate.data.frame(x = Demo$Net, by = Demo$Date, FUN = "sum")
?aggregate.data.frame
DatesList <- as.list(unique(Demo$Date))
AggDemo <- aggregate(x = Demo$Net, by = DatesList, FUN = "sum")
AggDemo <- aggregate(x = Demo, by = DatesList, FUN = "sum")
AggDemo <- aggregate(x = Demo, by = Demo$Date, FUN = "sum")
AggDemo <- aggregate(x = Demo, by = DatesList, FUN = "sum")
AggDemo <- aggregate(x = Demo, by = list(DatesList = Demo$Date), FUN = "sum")
AggDemo <- aggregate(x = Demo$Net, by = list(DatesList = Demo$Date), FUN = "sum")
Head(AggDemo)
head(AggDemo)
## Read in disaggregated Transactions
Demo <- read.delim("DataExp1.txt")
## Change class on Date and DoW
Demo[,1] <- as.factor(Demo[,1])
Demo[,2] <- as.factor(Demo[,2])
## Replace nulls with 0
Demo[is.na(Demo)] <- 0
## First net Debits and Credits
Demo$Net <- Demo$Debit + Demo$Credit
## Aggregate transaction lines to Sum-by-Date
AggDemo <- aggregate(x = Demo$Net, by = list(DatesList = Demo$Date), FUN = "sum")
## Review
head(AggDemo)
names(AggDemo) <- c("Date","NetExp")
names(AggDemo)
head(AggDemo)
AggDemo <- aggregate(x = Demo$Net, by = list(DatesList = Demo$Date, DoW = Demo$DoW.M.1), FUN = "sum")
## Clean up names
names(AggDemo) <- c("Date","DoW","NetExp")
## Review
head(AggDemo)
?sort()
sort(AggDemo$Date, FALSE)
AggDemo[do.call(order,AggDemo), ]
Test <- AggDemo[do.call(order,AggDemo), ]
Head(Test)
head(Test)
AggDemo <- aggregate(x = Demo$Net, by = list(DatesList = Demo$Date, DoW = Demo$DoW.M.1), FUN = "sum")
## Clean up names
names(AggDemo) <- c("Date","DoW","NetExp")
## Review
head(AggDemo)
```
remove(Test)
## Aggregate transaction lines to Sum-by-Date
AggDemo <- aggregate(x = Demo$Net, by = list(DoW = Demo$DoW.M.1, DatesList = Demo$Date), FUN = "sum")
## Clean up names
names(AggDemo) <- c("Date","DoW","NetExp")
## Review
head(AggDemo)
names(AggDemo) <- c("DoW","Date","NetExp")
head(AggDemo)
Data <- read.delim("DataExp1.txt", header = TRUE)
head(Data)
Data <- read.delim("DataExp2.txt", header = TRUE)
head(Data)
# Load Data
RawImport <- read.delim("Data2.txt", header = TRUE)
# Evaluate Load
head(RawImport)
summary(RawImport)
classes <- c()
for (i in 1:5) {classes[i] <- as.vector(class(RawImport[,i]))}
classes
# Clean Load
CleanImport <- RawImport
CleanImport[,1] <- as.factor(CleanImport[,1])
CleanImport[,2] <- as.factor(CleanImport[,2])
cleanclasses <- c()
for (i in 1:5) {cleanclasses[i] <- as.vector(class(CleanImport[,i]))}
cleanclasses
CleanImport[,5] <- CleanImport[,5]*-1
head(CleanImport)
colnames(CleanImport)[1] <- "Date"
colnames(CleanImport)[2] <- "DoW"
colnames(CleanImport)[5] <- "Exp"
remove(i,classes,cleanclasses)
drops <- c("Date")
CleanImport <- CleanImport[ , !(names(CleanImport) %in% drops)]
remove(i,classes,cleanclasses,drops)
# Load Libraries
library(caret)
library(ellipse)
library(e1071)
library(randomForest)
library(plyr)
library(sp)
# Load Data
RawImport <- read.delim("Data2.txt", header = TRUE)
# Evaluate Load
head(RawImport)
summary(RawImport)
classes <- c()
for (i in 1:5) {classes[i] <- as.vector(class(RawImport[,i]))}
classes
# Clean Load
CleanImport <- RawImport
CleanImport[,1] <- as.factor(CleanImport[,1])
CleanImport[,2] <- as.factor(CleanImport[,2])
cleanclasses <- c()
for (i in 1:5) {cleanclasses[i] <- as.vector(class(CleanImport[,i]))}
cleanclasses
CleanImport[,5] <- CleanImport[,5]*-1
head(CleanImport)
colnames(CleanImport)[1] <- "Date"
colnames(CleanImport)[2] <- "DoW"
colnames(CleanImport)[5] <- "Exp"
remove(i,classes,cleanclasses)
drops <- c("Date")
CleanImport <- CleanImport[ , !(names(CleanImport) %in% drops)]
remove(i,classes,cleanclasses,drops)
# Load Data
RawImport <- read.delim("DataExp2.txt", header = TRUE)
# Evaluate Load
head(RawImport)
summary(RawImport)
classes <- c()
for (i in 1:5) {classes[i] <- as.vector(class(RawImport[,i]))}
classes
# Clean Load
CleanImport <- RawImport
CleanImport[,1] <- as.factor(CleanImport[,1])
CleanImport[,2] <- as.factor(CleanImport[,2])
cleanclasses <- c()
for (i in 1:5) {cleanclasses[i] <- as.vector(class(CleanImport[,i]))}
cleanclasses
CleanImport[,5] <- CleanImport[,5]*-1
head(CleanImport)
colnames(CleanImport)[1] <- "Date"
colnames(CleanImport)[2] <- "DoW"
colnames(CleanImport)[5] <- "Exp"
remove(i,classes,cleanclasses)
drops <- c("Date")
CleanImport <- CleanImport[ , !(names(CleanImport) %in% drops)]
remove(i,classes,cleanclasses,drops)
head(CleanImport)
# Load Libraries
library(caret)
library(ellipse)
library(e1071)
library(randomForest)
library(plyr)
library(sp)
```
```{r echo=TRUE}
# Load Data
RawImport <- read.delim("DataExp2.txt", header = TRUE)
# Clean Data
CleanImport <- RawImport
CleanImport[,1] <- as.factor(CleanImport[,1])
CleanImport[,2] <- as.factor(CleanImport[,2])
CleanImport[,5] <- CleanImport[,5]*-1
colnames(CleanImport)[1] <- "Date"
colnames(CleanImport)[2] <- "DoW"
colnames(CleanImport)[5] <- "Exp"
remove(RawImport)
drops <- c("Date")
CleanImport <- CleanImport[ , !(names(CleanImport) %in% drops)]
head(CleanImport)
remove(drops)
summary(CleanImport)
dim(CleanImport)
